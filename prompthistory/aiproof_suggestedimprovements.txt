1. Initial Requirements Prompt:
    - "As an experienced technical product manager and thinking this through step by step, list the technical requirements..."
    + "As a technical product manager, break down the AI proofreading feature into detailed technical requirements. Include:
    + - User interaction flow
    + - Technical components needed
    + - Integration points
    + - Performance considerations
    + - Security requirements"

2. Implementation Review Prompt:
    - "Thinking this through step by step as a node, react, and prisma expert and considering the application design, make suggestions..."
    + "Review the AI proofreading requirements as a full-stack expert. Specifically evaluate:
    + - Schema design completeness
    + - API endpoint coverage
    + - Component architecture
    + - State management approach
    + - Performance considerations"

3. Error Analysis Prompts:
    - "There is an error added in context, as a prisma expert..."
    + "Analyze this Prisma error:
    + 1. What is the root cause?
    + 2. What are potential fixes?
    + 3. How to prevent similar issues?
    + Include code examples for the solution."
    

Version 2:
Implement [feature] with these constraints:
1. Dependencies:
   - List current package versions
   - Specify compatibility requirements
2. Implementation Steps:
   - UI Components and handlers
   - API endpoints and error handling
   - Database schema changes
3. Testing Requirements:
   - User interaction flows
   - Error scenarios
   - Edge cases

Provide complete code for each component including:
- Event handlers
- Error handling
- State management
- Loading states


Debug [issue] considering:
1. Current Implementation:
   - Affected files
   - Package versions
   - Environment variables
2. Error Context:
   - Full error message
   - Steps to reproduce
   - Current state
3. Required Functionality:
   - Expected behavior
   - User interactions
   - Error handling

Provide complete fix including:
- All necessary file changes
- Version compatibility checks
- Testing steps


Resolve dependency conflicts for [feature]:
1. Current Dependencies:
   - List all related packages
   - Current versions
   - Required versions
2. Implementation Requirements:
   - Required functionality
   - Minimum versions needed
   - Alternative packages
3. Migration Steps:
   - Version update order
   - Breaking changes
   - Testing requirements
